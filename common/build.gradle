plugins {
    id 'fabric-loom'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
    mavenLocal()
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

/*
    Add the following to ~/.gradle/gradle.properties
    systemProp.org.gradle.s3.endpoint=https://<the s3 endpoint>
    MCEF_S3_PUBLISH_URL_SNAPSHOT=s3://<bucket>/repositories/snapshots
    MCEF_S3_PUBLISH_URL_RELEASE=s3://<bucket>/repositories/releases
    MCEF_S3_PUBLISH_ACCESS_KEY=<access key>
    MCEF_S3_PUBLISH_SECRET_KEY=<secret key>
 */
publishing {
    repositories {
        maven {
            url ((mcef_version.toString().endsWith("SNAPSHOT")) ? findProperty('MCEF_S3_PUBLISH_URL_SNAPSHOT') : findProperty('MCEF_S3_PUBLISH_URL_RELEASE'))
            credentials(AwsCredentials) {
                accessKey = findProperty('MCEF_S3_PUBLISH_ACCESS_KEY')
                secretKey = findProperty('MCEF_S3_PUBLISH_SECRET_KEY')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.cinemamod'
            artifactId = 'mcef'
            version = mcef_version
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
}

sourceSets {
    jcef {
        java {
            srcDir "java-cef/java"
            exclude "**/tests/**"
        }
    }

    main {
        compileClasspath += jcef.output
        runtimeClasspath += jcef.output
    }
}

processResources.dependsOn(processJcefResources)

jar {
    from sourceSets.jcef.output.classesDirs
    from sourceSets.jcef.output.resourcesDir
}

idea {
    module {
        excludeDirs += file("java-cef/java/tests")
        inheritOutputDirs true
    }
}